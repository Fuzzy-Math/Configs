#!/bin/sh
# Read the river, riverctl, and rivertile man pages.

background=$(fd . --type f -e jpg ~/src/desktop/wallpapers | shuf -n1)

riverctl spawn "bash $HOME/.config/river/process.sh $background &"

# Use the "logo" key as the primary modifier
mod="Mod4"
mod1="Mod1"

# Open alacritty
riverctl map normal $mod Return spawn alacritty

# Open rofi
riverctl map normal $mod Space spawn "rofi -show drun"

# Open thunar
riverctl map normal $mod N spawn "thunar"

# Open ranger
riverctl map normal $mod+Shift F spawn "alacritty --class rangerfloat,rangerfloat --option window.dimensions.columns=125 window.dimensions.lines=25 --command ranger"
riverctl map normal $mod F spawn "alacritty --command ranger"

# Open pavucontrol
riverctl map normal $mod P spawn "pavucontrol"

# Open Qutebrowser
riverctl map normal $mod B spawn "qutebrowser"

# Open Chrome
riverctl map normal $mod G spawn "google-chrome"

# Toggle waybar
riverctl map normal $mod+Shift B spawn "killall -SIGUSR1 waybar"

# Reload river configuration
riverctl map normal $mod+Shift R spawn "~/.config/river/init"

# Screenshot
riverctl map normal $mod+Shift S spawn 'IMG=~/Pictures/Screenshots/$(date | sed "s/\s/-/g" | sed "s/--/-/g").png && grim -g "$(slurp)" $IMG && cat $IMG | wl-copy && notify-send "Screenshot Clipped"'

# Fullscreen
riverctl map normal None Print spawn 'IMG=~/Pictures/Screenshots/$(date | sed "s/\s/-/g" | sed "s/--/-/g").png && grim $IMG && cat $IMG | wl-copy && notify-send "Full-Screenshot Taken"'

# Close the focused window
riverctl map normal $mod Q close

# Lock the session
riverctl map normal $mod L spawn "swaylock -i $background"

# Suspend
riverctl map normal $mod+$mod1 L spawn "systemctl suspend --now"

# Exit river
riverctl map normal $mod+$mod1 R exit

# Shutdown
riverctl map normal $mod+$mod1 Q spawn "systemctl poweroff --now"

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# Mod+. and Mod+, to swap the focused output to the next/previous
riverctl map normal $mod period focus-output right
riverctl map normal $mod comma focus-output left

# Mod+Shift+. and Mod+Shift+, to move the focused view to the next/previous output
riverctl map normal $mod+Shift period send-to-output right
riverctl map normal $mod+Shift comma send-to-output left

# Warp cursor to new output when the focused output is changed
riverctl set-cursor-warp on-output-change

# Bring focused view to the topp of the stack (zoom)
riverctl map normal $mod+Shift Return zoom

# Mod+H and Mod+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift I send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift D send-layout-cmd rivertile "main-count -1"

# Mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Mod1 left move left 100
riverctl map normal $mod+Mod1 down move down 100
riverctl map normal $mod+Mod1 up move up 100
riverctl map normal $mod+Mod1 right move right 100

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Mod1+Shift left snap left
riverctl map normal $mod+Mod1+Shift down snap down
riverctl map normal $mod+Mod1+Shift up snap up
riverctl map normal $mod+Mod1+Shift right snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Shift left resize horizontal -100
riverctl map normal $mod+Shift up resize vertical 100
riverctl map normal $mod+Shift down resize vertical -100
riverctl map normal $mod+Shift right resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Toggle float
riverctl map normal $mod T toggle-float

# Toggle fullscreen
riverctl map normal $mod M toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

for mode in normal locked
do
    # Audio 
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer --allow-boost --set-limit 150 -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer -t'

    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 10'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 10'
done

# Set background and border color
riverctl border-color-focused 0x69d588
riverctl border-color-unfocused 0x414a5b

# Attach new views to the bottom of the stack
riverctl attach-mode bottom

# Set repeat rate
# riverctl set-repeat 100 300

riverctl focus-follows-cursor normal

# Make certain views start floating
#riverctl float-filter-add app-id float
riverctl float-filter-add app-id rangerfloat
riverctl float-filter-add app-id pavucontrol
riverctl float-filter-add app-id blueman-manager
riverctl csd-filter-add app-id chrome

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))
# Toggle the scratchpad with Super+P
riverctl map normal $mod C toggle-focused-tags ${scratch_tag}
# Send windows to the scratchpad with Super+Shift+P
riverctl map normal $mod+Shift C set-view-tags ${scratch_tag}
# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile &
exec rivertile -main-ratio 0.5 -view-padding 2 -outer-padding 2 &
for pad in $(riverctl list-inputs | grep -i touchpad )
do
  riverctl input $pad events enabled
  riverctl input $pad tap enabled
done

swayidle -w \
                timeout 300 'swaymsg "output * dpms off"' \
                timeout 600 'swaylock -i $background -f -c 000000' \
                     resume 'swaymsg "output * dpms on"' \
                before-sleep 'swaylock -i $background -f -c 000000' \
		#timeout 1200 'systemctl suspend'

gsettings set org.gnome.desktop.default-applications.terminal exec alacritty.desktop
riverctl spawn /lib/xdg-desktop-portal
riverctl spawn /lib/xdg-desktop-portal-gtk
riverctl spawn /lib/xdg-desktop-portal-wlr
